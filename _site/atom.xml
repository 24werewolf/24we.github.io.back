<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>wenknows's blog</title>
 <link href="http://wenzhiquan.github.io/" rel="self"/>
 <link href="http://wenzhiquan.github.io"/>
 <updated>2016-03-28T20:39:08+08:00</updated>
 <id>http://wenzhiquan.github.io</id>
 <author>
   <name>温智全</name>
   <email>wenzhi-009@163.com</email>
 </author>

 
 <entry>
   <title>七种排序算法</title>
   <link href="http://wenzhiquan.github.io/2016/03/28/seven_sort"/>
   <updated>2016-03-28T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2016/03/28/seven_sort</id>
   <content type="html">&lt;h1&gt;七种排序算法&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3&gt;1. 概述&lt;/h3&gt;

&lt;p&gt;排序算法可以说是数据结构与算法当中最为基础的部分，针对的数组这一数据结构。将数组中的无序数据元素通过算法整理为有序的数据元素即为排序。&lt;/p&gt;

&lt;h3&gt;2. 简单排序&lt;/h3&gt;

&lt;h4&gt;2.1 冒泡排序&lt;/h4&gt;

&lt;p&gt;简介：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;冒泡排序&lt;/code&gt;（Bubble Sort）是一种简单的排序算法。它重复地访问要排序的数列，将每次访问的最大值“浮”到数组尾部。&lt;/p&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;比较相邻的元素。如果第一个比第二个大，就交换他们两个，直到把最大的元素放到数组尾部。&lt;/li&gt;
&lt;li&gt;遍历长度减一，对剩下的元素从头重复以上的步骤。&lt;/li&gt;
&lt;li&gt;直到没有任何一对数字需要比较时完成。&lt;/li&gt;
&lt;/ol&gt;


&lt;!--break--&gt;


&lt;p&gt;实现代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def bubbleSort(arr):
    for i in range(len(arr))[::-1]:
        for j in range(i):
            if arr[j] &amp;gt; arr[j + 1]:
                swap(arr[j], arr[j + 1])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/bubbleSort.gif&quot; alt=&quot;冒泡排序&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;2.2 选择排序&lt;/h4&gt;

&lt;p&gt;简介：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;选择排序&lt;/code&gt;(Selection sort)是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小元素，存放到排序序列的起始位置，重复上述过程，直到所有元素均排序完毕。&lt;/p&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;遍历数组，找到最小的元素，将其置于数组起始位置。&lt;/li&gt;
&lt;li&gt;从上次最小元素存放的后一个元素开始遍历至数组尾，将最小的元素置于开始处。&lt;/li&gt;
&lt;li&gt;重复上述过程，直到元素排序完毕。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;实现代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def selectSort(arr):
    for i in range(len(arr)):
        min = i
        for j in range(i, len(arr)):
            if arr[j] &amp;lt; arr[min]:
                min = j
        swap(arr[i], arr[min])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/selectSort.gif&quot; alt=&quot;选择排序&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;2.3 插入排序&lt;/h4&gt;

&lt;p&gt;简介：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;插入排序&lt;/code&gt;（Insertion Sort）是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。&lt;/p&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;从第一个元素开始，该元素可以认为已经被排序&lt;/li&gt;
&lt;li&gt;取出下一个元素，在已经排序的元素序列中从后向前扫描&lt;/li&gt;
&lt;li&gt;如果该元素（已排序）大于新元素，将该元素移到下一位置&lt;/li&gt;
&lt;li&gt;重复步骤3，直到找到已排序的元素小于或者等于新元素的位置&lt;/li&gt;
&lt;li&gt;将新元素插入到该位置中&lt;/li&gt;
&lt;li&gt;重复步骤2&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;实现代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def insertSort(arr):
    for i in range(len(arr)):
        tmp = arr[i]
        pre = i - 1
        while pre &amp;gt;= 0 and arr[pre] &amp;gt; tmp:
            arr[pre + 1] = arr[pre]
            pre -= 1
        arr[pre + 1] = tmp
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;3. 高级排序&lt;/h3&gt;

&lt;h4&gt;3.1 希尔排序&lt;/h4&gt;

&lt;p&gt;简介：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;希尔排序&lt;/code&gt;(Shell Sort)是插入排序的一种。也称缩小增量排序，是直接插入排序算法的一种更高效的改进版本。希尔排序是非稳定排序算法。&lt;/p&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;希尔排序是把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；&lt;/li&gt;
&lt;li&gt;随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;实现代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def insertSort(arr):
    k = 1
    while k &amp;lt; len(arr) / 3:
        k = 3 * h + 1 //此处为Knuth算法

    while k &amp;gt; 0:
        for i in range(k, len(arr)):
            tmp = arr[i]
            pre = i - k
            while pre &amp;gt;= 0 and arr[pre] &amp;gt; tmp:
                arr[pre + k] = arr[pre]
                pre -= k
            arr[pre + k] = tmp
        k = (k - 1) / 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/shellSort.gif&quot; alt=&quot;希尔排序&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;3.2 快速排序&lt;/h4&gt;

&lt;p&gt;简介：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;快速排序&lt;/code&gt;（Quicksort）是对冒泡排序的一种改进。它的基本思想是：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。&lt;/p&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;

&lt;p&gt;步骤：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;从数列中挑出一个元素，称为 “基准”（pivot），&lt;/li&gt;
&lt;li&gt;重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。&lt;/li&gt;
&lt;li&gt;递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;实现代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def quickSort(arr, low, high):
    if low &amp;lt; high:
        pivot = partition(arr, low, high)
        quickSort(arr, low, pivot - 1)
        quickSort(arr, pivot + 1, high)

def partition(arr, low, high):
    pivot = arr[low]
    while low &amp;lt; high:
        while low &amp;lt; high and arr[high] &amp;gt;= pivot:
            high -= 1
        arr[low] = arr[high]
        while low &amp;lt; high and arr[low] &amp;lt;= pivot:
            low += 1
        arr[high] = arr[low]
    arr[low] = pivot
    return low
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/quickSort.gif&quot; alt=&quot;快速排序&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;3.3 归并排序&lt;/h4&gt;

&lt;p&gt;简介：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;归并排序&lt;/code&gt;(Merge Sort)是建立在归并操作上的一种有效的排序算法,该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。&lt;/p&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;申请空间，创建两个数组，长度分别为两个有序数组的长度&lt;/li&gt;
&lt;li&gt;设定两个指针，最初位置分别为两个已经排序序列的起始位置&lt;/li&gt;
&lt;li&gt;比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置&lt;/li&gt;
&lt;li&gt;重复步骤3直到某一指针达到序列尾&lt;/li&gt;
&lt;li&gt;将另一序列剩下的所有元素直接复制到合并序列尾&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;实现代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def mergeSort(arr, low, high):
    if low &amp;lt; high:
        mid = low + (high - low) / 2
        mergeSort(arr, low, mid)
        mergeSort(arr, mid + 1, high)
        return merge(arr, low, mid, high)

def merge(arr, low, mid, high):
    leftArr = arr[low : mid + 1]
    rightArr = arr[mid + 1 : high + 1]
    i, j, m = 0, 0, low
    while i &amp;lt; len(leftArr) and j &amp;lt; len(rightArr)：
        if leftArr[i] &amp;lt; rightArr[j]:
            arr[m] = leftArr[i]
            i += 1
        else:
            arr[m] = rightArr[j]
            j += 1
        m += 1
    while i &amp;lt; len(leftArr):
        arr[m] = leftArr[i]
        m += 1
        i += 1
    while j &amp;lt; len(rightArr):
        arr[m] = rightArr[j]
        m += 1
        j += 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;实现效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/mergeSort.gif&quot; alt=&quot;归并排序&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;3.4 堆排序&lt;/h4&gt;

&lt;p&gt;简介：&lt;/p&gt;

&lt;p&gt;堆积排序（Heap Sort）是指利用堆这种数据结构所设计的一种排序算法。堆是一个近似完全二叉树的结构，并同时满足堆性质：即子结点的键值或索引总是小于（或者大于）它的父节点。&lt;/p&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;按堆的定义将数组R[0..n]调整为堆（这个过程称为创建初始堆），交换R[0]和R[n]；&lt;/li&gt;
&lt;li&gt;将R[0..n-1]调整为堆，交换R[0]和R[n-1]；&lt;/li&gt;
&lt;li&gt;重复上述过程，直到交换了R[0]和R[1]为止。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;实现代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def heapSort(arr):
    for i in range(len(arr) / 2)[::-1]:
        heapAdjust(arr, i, len(arr) - 1)

    for i in range(len(arr) - 1)[::-1]:
        swap(arr[i], arr[0])
        heapAdjust(arr, 0, i)

def heapAdjust(arr, parent, length)：
    tmp = arr[parent]
    child = 2 * parent + 1
    while child &amp;lt; length:
        if child + 1 &amp;lt; length and arr[child + 1] &amp;gt; arr[child]:
            child += 1
        if arr[child] &amp;lt;= tmp:
            break
        arr[parent] = arr[child]
        parent = child
        child = 2 * parent + 1
    arr[parent] = tmp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/heapSort.gif&quot; alt=&quot;堆排序&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 22上安装jekyll</title>
   <link href="http://wenzhiquan.github.io/2015/09/18/install_jekyll_on_fedora_22"/>
   <updated>2015-09-18T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2015/09/18/install_jekyll_on_fedora_22</id>
   <content type="html">&lt;h1&gt;Fedora 22上安装jekyll&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3&gt;1. 概述&lt;/h3&gt;

&lt;p&gt;jekyll是一个简单的免费的Blog生成工具，类似WordPress。但是和WordPress又有很大的不同，原因是jekyll只是一个生成静态网页的工具，不需要数据库支持。但是可以配合第三方服务,例如Disqus。最关键的是jekyll可以免费部署在Github上，而且可以绑定自己的域名。&lt;/p&gt;

&lt;h3&gt;2. 安装最新版ruby&lt;/h3&gt;

&lt;p&gt;调用命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf install ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后,输入命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会有如下类似的显示:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby 2.2.3p173 (2015-08-18 revision 51636) [x86_64-linux]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明已经成功安装了2.2.3版本的ruby。&lt;/p&gt;

&lt;!--break--&gt;


&lt;h3&gt;3. 安装jkeyll&lt;/h3&gt;

&lt;p&gt;安装最新版本的jekyll，命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装过程中可能会报如下错误:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Fetching: ffi-1.9.10.gem (100%)
Building native extensions.  This could take a while...
ERROR:  Error installing jekyll:
    ERROR: Failed to build gem native extension.

    /usr/bin/ruby -r ./siteconf20150918-17908-j7rbks.rb extconf.rb
mkmf.rb can&#39;t find header files for ruby at /usr/share/include/ruby.h

extconf failed, exit code 1

Gem files will remain installed in /home/wenzhiquan/.gem/ruby/gems/ffi-1.9.10 for inspection.
Results logged to /home/wenzhiquan/.gem/ruby/extensions/x86_64-linux/ffi-1.9.10/gem_make.out
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原因是没有安装gem本地扩展,输入命令&lt;code&gt;sudo dnf install ruby-devel&lt;/code&gt;安装dev版本的ruby即可解决问题。如果是报gcc相关的错误,只需要&lt;code&gt;sudo dnf install gcc&lt;/code&gt;进行安装即可。&lt;/p&gt;

&lt;p&gt;因为我们将会使用Markdown语言作为标记语言，所以还需要安装rdiscount，命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install rdiscount
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，本机的jekyll运行环境就已经搭建好了。&lt;/p&gt;

&lt;h3&gt;4. 运行例子&lt;/h3&gt;

&lt;p&gt;安装好之后，就可以自己构建一个博客系统，或者也可以到&lt;a href=&quot;http://jekyllthemes.org/&quot; title=&quot;jekyll 模板网站&quot;&gt;jekyll模板网站&lt;/a&gt; 下载自己喜欢的模板进行修改，然后运行并查看效果，要运行jekyll首先要进入博客的根目录，然后运行命令&lt;code&gt;jekyll server&lt;/code&gt;，最后会显示启动信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Server address: http://127.0.0.1:4000/
Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明程序已经成功启动，在浏览器中输入localhost:4000，就可以查看自己的博客了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mac OS上搭建LNMP开发环境</title>
   <link href="http://wenzhiquan.github.io/2015/05/29/install_nginx_php_mysql_phpmyadmin_on_mac_osx"/>
   <updated>2015-05-29T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2015/05/29/install_nginx_php_mysql_phpmyadmin_on_mac_osx</id>
   <content type="html">&lt;h1&gt;Mac OS上搭建LNMP开发环境&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3&gt;1. 概述&lt;/h3&gt;

&lt;p&gt;LNMP代表的就是：Linux系统下Nginx+MySQL+PHP这种网站服务器架构。Linux是一类Unix计算机操作系统的统称，是目前最流行的免费操作系统。代表版本有：debian、centos、ubuntu、fedora、gentoo等。&lt;a href=&quot;http://nginx.org/&quot;&gt;Nginx&lt;/a&gt;是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP代理服务器。&lt;a href=&quot;http://www.mysql.com/&quot;&gt;Mysql&lt;/a&gt;是一个小型关系型数据库管理系统。&lt;a href=&quot;http://php.net/&quot;&gt;PHP&lt;/a&gt;是一种在服务器端执行的嵌入HTML文档的脚本语言。这四种软件均为免费开源软件，组合到一起，成为一个免费、高效、扩展性强的网站服务系统。&lt;/p&gt;

&lt;h3&gt;2. 安装Homebrew&lt;/h3&gt;

&lt;p&gt;使用Mac的程序员必不可少的一步便是安装Homebrew，他就像是centOS的&lt;code&gt;yum&lt;/code&gt;命令和ubuntu的&lt;code&gt;apt-get&lt;/code&gt;命令一样，通过&lt;code&gt;brew&lt;/code&gt;命令，我们可以快速的安装一些软件包。
使用命令行安装Homebrew的命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用&lt;code&gt;brew doctor&lt;/code&gt;检查是否存在冲突，然后使用&lt;code&gt;brew update &amp;amp;&amp;amp; brew upgrade&lt;/code&gt;对brew进行升级。&lt;/p&gt;

&lt;!--break--&gt;


&lt;h3&gt;3. 安装nginx&lt;/h3&gt;

&lt;p&gt;nginx在Mac OS中可以直接使用brew命令进行安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果需要使用80端口的话，需要将nginx加入root组当中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cp -v /usr/local/opt/nginx/*.plist /Library/LaunchDaemons/
sudo chown root:wheel /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后使用命令启动nginx服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试nginx是否安装成功，因为默认配置文件监听的是&lt;code&gt;8080&lt;/code&gt;端口，所以先对&lt;code&gt;8080&lt;/code&gt;端口发起请求：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -IL http://127.0.0.1:8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结果应该类似于下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HTTP/1.1 200 OK
Server: nginx/1.9.1
Date: Fri, 29 May 2015 14:50:47 GMT
Content-Type: text/html
Content-Length: 612
Last-Modified: Fri, 29 May 2015 14:40:47 GMT
Connection: keep-alive
ETag: &quot;5444dea7-264&quot;
Accept-Ranges: bytes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginx的相关操作如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nginx //启动nginx
sudo nginx -s reload|reopen|quit //重新加载|重启|退出
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;4. 安装php-fpm&lt;/h3&gt;

&lt;p&gt;因为brew并没有php-fpm的源，所以首先要添加源：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew tap homebrew/dupes
brew tap homebrew/php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后安装php-fpm，输入命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install php56 --whitout-apache --with-imap --with-tidy --with-debug --with-pgsql --with-mysql --with-fpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;程序会自动安装，等待几分钟后完成安装。&lt;/p&gt;

&lt;p&gt;安装完成后，还需要将php加入&lt;code&gt;$PATH&lt;/code&gt;当中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 如果使用bash的话
vim ~/.bash_profile
export PATH=&quot;/usr/local/sbin:$PATH&quot;
source ~/.bash_profile

# 如果使用ZSH的话
vim ~/.zshrc
export PATH=&quot;/usr/local/sbin:$PATH&quot;
source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后可以设置php-fpm的开机自启动：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p ~/Library/LaunchAgents
ln -sfv /usr/local/opt/php56/homebrew.mxcl.php56.plist ~/Library/LaunchAgents/
launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php56.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用以下命令监测php-fpm是否启动成功：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lsof -Pni4 | grep LISTEN | grep php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果启动成功应当有以下类似输出：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;php-fpm   27578 wenzhiquan    9u  IPv4 0xf29f8b26c08fc27      0t0  TCP 127.0.0.1:9000 (LISTEN)
php-fpm   27628 wenzhiquan    0u  IPv4 0xf29f8b26c08fc27      0t0  TCP 127.0.0.1:9000 (LISTEN)
php-fpm   27629 wenzhiquan    0u  IPv4 0xf29f8b26c08fc27      0t0  TCP 127.0.0.1:9000 (LISTEN)
php-fpm   27630 wenzhiquan    0u  IPv4 0xf29f8b26c08fc27      0t0  TCP 127.0.0.1:9000 (LISTEN)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;5. 安装MySQL&lt;/h3&gt;

&lt;p&gt;MySQL也可以使用brew命令直接进行安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样，可以设置MySQL的开机自启动：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents
launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后进行MySQL的安全安装，使用以下命令，可以更改root密码、删除匿名用户、关闭远程连接等：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后会输出以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; Enter current password for root (enter for none):     //默认没有密码，直接回车即可
&amp;gt; Change the root password? [Y/n]                       //是否更改root密码，选择是，然后输入并确认密码
&amp;gt; Remove anonymous users? [Y/n]                         //是否删除匿名用户，选择是
&amp;gt; Disallow root login remotely? [Y/n]                   //是否禁止远程登录，选择是
&amp;gt; Remove test database and access to it? [Y/n]          //是否删除test数据库，选择是
&amp;gt; Reload privilege tables now? [Y/n]                    //是否重载表格数据，选择是
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试数据库是否安装成功：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后输入刚才设置的root密码，将会输出以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

mysql&amp;gt; exit         //输入exit退出数据库
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;6. 配置nginx&lt;/h3&gt;

&lt;p&gt;首先，为我们的配置文件创建一些文件夹，这些是仿照ubuntu的nginx结构进行建立的目录：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /usr/local/etc/nginx/logs
mkdir -p /usr/local/etc/nginx/sites-available
mkdir -p /usr/local/etc/nginx/sites-enabled
mkdir -p /usr/local/etc/nginx/conf.d
mkdir -p /usr/local/etc/nginx/ssl

sudo mkdir -p /var/www
sudo chown :staff /var/www
sudo chmod 775 /var/www
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后修改nginx配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /usr/local/etc/nginx/nginx.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将内容替换为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;worker_processes  1;

error_log  /usr/local/etc/nginx/logs/error.log debug;

events {
    worker_connections  1024;
}

http {
    include             mime.types;
    default_type        application/octet-stream;

    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;
                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;
                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;

    access_log  /usr/local/etc/nginx/logs/access.log  main;

    sendfile            on;

    keepalive_timeout   65;

    index index.html index.php;

    include /usr/local/etc/nginx/sites-enabled/*;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后创建php-fpm配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /usr/local/ect/nginx/conf.d/php-fpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location ~ \.php$ {
    try_files      $uri = 404;
    fastcgi_pass   127.0.0.1:9000;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include        fastcgi_params;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后加入站点配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /usr/local/ect/nginx/sites-enabled/default
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server {
    listen       80;
    server_name  localhost;
    root       /var/www/;

    access_log  /usr/local/etc/nginx/logs/default.access.log  main;

    location / {
        include   /usr/local/etc/nginx/conf.d/php-fpm;
    }

    location = /info {
        allow   127.0.0.1;
        deny    all;
        rewrite (.*) /.info.php;
    }

    error_page  404     /404.html;
    error_page  403     /403.html;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启nginx，至此，配置完成，在www下写一个测试文件，进行测试即可&lt;/p&gt;

&lt;h4&gt;尽情的享受在Mac OS开发PHP的快感吧！&lt;/h4&gt;
</content>
 </entry>
 
 <entry>
   <title>leetcode easy remove_duplicates_from_sorted_array</title>
   <link href="http://wenzhiquan.github.io/2015/05/19/leetcode_26_easy_remove_duplicates_from_sorted_array"/>
   <updated>2015-05-19T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2015/05/19/leetcode_26_easy_remove_duplicates_from_sorted_array</id>
   <content type="html">&lt;h1&gt;leetcode easy remove_duplicates_from_sorted_array&lt;/h1&gt;

&lt;hr /&gt;

&lt;h4&gt;题目：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this in place with constant memory.

For example,
Given input array nums = [1,1,2],

Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn&#39;t matter what you leave beyond the new length.
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;翻译：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;给定一个有序数组，删除所有重复的元素，使得每个元素仅出现一次，返回新的数组长度。
不要使用额外的数组，你必须在连续的内存中完成这项工作。
例如，给定一个输入数组[1, 1, 2], 你的函数应该返回length = 2，并且数组的前两个元素应该分别为1和2。超过新长度的部分不需要进行考虑。
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Tags：&lt;code&gt;array&lt;/code&gt; &lt;code&gt;two pointers&lt;/code&gt;&lt;/h4&gt;

&lt;!--break--&gt;


&lt;h4&gt;代码：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;C：

int removeDuplicates(int* nums, int numsSize) {
    if (numsSize == 0 || numsSize == 1)
        return numsSize;

    int count = 0;
    int i;
    for(i = 0; i&amp;lt;numsSize; i++){
        if(nums[count] != nums[i])
            nums[++count] = nums[i];
    }
    return ++count;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;讲解：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;本题应用了快慢指针的思想，
count用于向数组的最前部分存储不重复的数字，
i用于检索每一个数字，
如果出现重复的数字，就跳过他，继续向后进行检索，如果出现不同的数字，则count在数组中右移一位后存储这个新的不重复数字
遍历完整个数组后结束。
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>leetcode easy isomorphic_strings</title>
   <link href="http://wenzhiquan.github.io/2015/05/19/leetcode_205_easy_isomorphic_strings"/>
   <updated>2015-05-19T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2015/05/19/leetcode_205_easy_isomorphic_strings</id>
   <content type="html">&lt;h1&gt;leetcode easy isomorphic_strings&lt;/h1&gt;

&lt;hr /&gt;

&lt;h4&gt;题目：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

For example,
Given &quot;egg&quot;, &quot;add&quot;, return true.

Given &quot;foo&quot;, &quot;bar&quot;, return false.

Given &quot;paper&quot;, &quot;title&quot;, return true.
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;翻译：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;给定两个字符串s和t，判断它们是否是同构的。
如果字符串s可以通过字符替换的方式得到字符串t，则称s和t是同构的。
字符的每一次出现都必须被其对应字符所替换，同时还需要保证原始顺序不发生改变。两个字符不能映射到同一个字符，但是字符可以映射到其本身。
测试样例如题目描述。
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;注意：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;You may assume both s and t have the same length.

可以假设s和t等长。
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Tags：&lt;code&gt;Hash Table&lt;/code&gt;&lt;/h4&gt;

&lt;!--break--&gt;


&lt;h4&gt;代码：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;C：

int isIsomorphic(char* s, char* t) {
    char mapST[123] = {};  //因为z的ascii码是122，map[&#39;z&#39;] 也就是map[122],所以至少需要123的空间。
    char mapTS[123] = {};
    int len = strlen(s);

    for(int i = 0; i &amp;lt; len; i++){
        if(mapST[s[i]] == 0 &amp;amp;&amp;amp; mapTS[t[i]] == 0){
            mapST[s[i]] = t[i];
            mapTS[t[i]] = s[i];
        }else
            if(mapST[s[i]] != t[i] || mapTS[t[i]] != s[i])
                return 0;
    }

    return 1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;讲解：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;使用两个哈希表mapST和mapTS维护两个字符串中字符的映射关系。
mapST[s[i]] = t[i]
mapTS[t[i]] = s[i]
当出现映射不一致的情形时，返回0
否则返回1
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>leetcode easy count_prime</title>
   <link href="http://wenzhiquan.github.io/2015/05/19/leetcode_204_easy_count_prime"/>
   <updated>2015-05-19T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2015/05/19/leetcode_204_easy_count_prime</id>
   <content type="html">&lt;h1&gt;leetcode easy count_prime&lt;/h1&gt;

&lt;hr /&gt;

&lt;h4&gt;题目：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Count the number of prime numbers less than a non-negative number, n
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;翻译：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;计算比一个给定非负数n小的质数的个数。
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;引用：&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://primes.utm.edu/howmany.html&quot; title=&quot;一共有多少个素数&quot;&gt;How many primes are there?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes&quot; title=&quot;Era筛选法&quot;&gt;Sieve of Eratosthenes&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Tags：&lt;code&gt;Hash Table&lt;/code&gt; &lt;code&gt;Math&lt;/code&gt;&lt;/h4&gt;

&lt;!--break--&gt;


&lt;h4&gt;代码：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;C：

int countPrimes(int n) {
    if(n &amp;lt; 3)
        return 0;
    else if(n == 3)
        return 1;
    else{
        int count = 1;
        int i = 0, j;
        int data;
        int len = n / 2;
        int array[len];

        //初始化奇数数组
        for(;i &amp;lt; len; i ++){
            data = 3 + 2 * i;
            if(data &amp;lt; n)
                array[i] = 3 + 2 * i;
            else
                array[i] = 0;
        }

        for(i = 0; i &amp;lt; len; i++){
            if(array[i] != 0)
                count++;
            else
                continue;
            for(j = i + array[i]; j &amp;lt; len; j+=array[i]){
                if(array[j] == 0)
                    continue;
                array[j] = 0;
            }
        }

        return count;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;讲解：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;本体使用了引用中的欧拉筛选法，首先初始化一个小于n的奇数数组，然后将所有素数的倍数全部置为0，每次检索的步长等于素数的大小。
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Mac OS Yosemite 配置sublime text C语言开发环境</title>
   <link href="http://wenzhiquan.github.io/2015/05/04/mac_os_yosemite_sublime_and_c"/>
   <updated>2015-05-04T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2015/05/04/mac_os_yosemite_sublime_and_c</id>
   <content type="html">&lt;h1&gt;配置sublime text C语言开发环境&lt;/h1&gt;

&lt;h3&gt;1. 概述&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sublimetext.com/3&quot; title=&quot;sublime text 3&quot;&gt;Sublime Text&lt;/a&gt; 是一个代码编辑器，也是HTML和散文先进的文本编辑器。它是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的&lt;a href=&quot;http://www.vim.org/download.php&quot; title=&quot;Vim&quot;&gt;Vim&lt;/a&gt;。
&lt;a href=&quot;http://www.sublimetext.com/3&quot; title=&quot;sublime text 3&quot;&gt;Sublime Text&lt;/a&gt;具有漂亮的用户界面和强大的功能，例如代码缩略图，代码段等。还可自定义键绑定，菜单和工具栏。它的主要功能包括：拼写检查，书签，Goto 功能，即时项目切换，多选择，多窗口等等。它是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。它还具有大量的可扩展插件，极大地丰富了这款编辑器的功能。&lt;/p&gt;

&lt;h3&gt;2. 安装配置sublime text&lt;/h3&gt;

&lt;h4&gt;2.1 安装sublime text 3&lt;/h4&gt;

&lt;p&gt;首先可以前往&lt;a href=&quot;http://www.sublimetext.com/3&quot; title=&quot;sublime text 3&quot;&gt;Sublime Text官方网站&lt;/a&gt;下载对应平台的软件，安装完成后即可使用。但是为了更好地使用这一款强大的软件，我们可以安装一些插件。&lt;/p&gt;

&lt;p&gt;这款软件是永久免费的，但是免费版会时不时的弹出购买提示，下面提供一个注册码，可以直接注册这个软件：&lt;/p&gt;

&lt;!--break--&gt;


&lt;pre&gt;&lt;code&gt;—– BEGIN LICENSE —–
Andrew Weber
Single User License
EA7E-855605
813A03DD 5E4AD9E6 6C0EEB94 BC99798F
942194A6 02396E98 E62C9979 4BB979FE
91424C9D A45400BF F6747D88 2FB88078
90F5CC94 1CDC92DC 8457107A F151657B
1D22E383 A997F016 42397640 33F41CFC
E1D0AE85 A0BBD039 0E9C8D55 E1B89D5D
5CDB7036 E56DE1C0 EFCC0840 650CD3A6
B98FC99C 8FAC73EE D2B95564 DF450523
—— END LICENSE ——
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;2.2 安装sublime text 3 插件&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;2.2.1 Package Control组件：&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;按control+`(键盘上1左边的按钮)调出console控制台&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;粘贴以下代码到底部命令行并回车：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre&gt;&lt;code&gt;import urllib.request,os; pf = &#39;Package Control.sublime-package&#39;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &#39;wb&#39;).write(urllib.request.urlopen( &#39;http://sublime.wbond.net/&#39; + pf.replace(&#39; &#39;,&#39;%20&#39;)).read())
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;重启Sublime Text 3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果在Perferences-&gt;package settings中看到package control这一项，则安装成功&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;下面是sublime text 2 的安装命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import urllib2,os; pf=&#39;Package Control.sublime-package&#39;; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), &#39;wb&#39; ).write( urllib2.urlopen( &#39;http://sublime.wbond.net/&#39; +pf.replace( &#39; &#39;,&#39;%20&#39; )).read()); print( &#39;Please restart Sublime Text to finish installation&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;&lt;p&gt;用Package Control安装插件的方法：&lt;/p&gt;&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;按下Ctrl+Shift+P调出命令面板&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入pcic 调出 Install Package 选项并回车，然后在列表中选中要安装的插件&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;em&gt;2.2.2 较为常用的一些插件&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ConvertToUTF8&lt;/code&gt;　　支持 GBK, BIG5, EUC-KR, EUC-JP, Shift_JIS 等编码的插件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Bracket Highlighter&lt;/code&gt;　　用于匹配括号，引号和html标签。对于很长的代码很有用。安装好之后，不需要设置插件会自动生效&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;DocBlockr&lt;/code&gt;　　DocBlockr可以自动生成PHPDoc风格的注释。它支持的语言有Javascript, PHP, ActionScript, CoffeeScript, Java, Objective C, C, C++&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Emmet(Zen Coding)&lt;/code&gt;　　快速生成HTML代码段的插件，强大到无与伦比，不知道的请自行google&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;SideBar Enhancements&lt;/code&gt;　　这个插件改进了侧边栏，增加了许多功能&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;SideBar Folders&lt;/code&gt;　　增加了侧边栏对于文件夹的支持&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;SublimeCodeIntel&lt;/code&gt;   提供了代码提示和自动补全功能&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;sublime text 还具有很多插件，读者可以根据自己所使用的语言和需要进行相应的安装&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2.2.3 配置sublime text主题&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Sublime Text本身对于主题的扩展也是十分的强大，一些推荐的主题可以前往&lt;a href=&quot;http://designbeep.com/2014/06/10/35-cool-sublime-text-themes/&quot;&gt;design beep网站&lt;/a&gt;进行选择和安装&lt;/p&gt;

&lt;p&gt;下面介绍一下我安装的主题和相应的配置文件：&lt;/p&gt;

&lt;p&gt;在package control中分别输入&lt;code&gt;numix&lt;/code&gt;和&lt;code&gt;itg.flat&lt;/code&gt;进行主题的安装，然后安装插件&lt;code&gt;markdown extend&lt;/code&gt;增加对markdown语法的支持，然后编辑&lt;code&gt;Settings-User&lt;/code&gt;，加入以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &quot;color_scheme&quot;: &quot;Packages/Theme - itg.flat/itg.dark.tmTheme&quot;,
    &quot;numix_sidebar_tree_medium&quot;: true,
    &quot;numix_small_tabs&quot;: true,
    &quot;theme&quot;: &quot;Numix.sublime-theme&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/image/sublime_theme.png&quot; alt=&quot;numix主题&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;3. 安装gcc&lt;/h3&gt;

&lt;p&gt;安装完sublime text后，编辑C语言的文本编辑器就已经配置好了，但是想要编译C文件，则需要安装&lt;a href=&quot;http://gcc.gnu.org/&quot; title=&quot;gcc官方网站&quot;&gt;gcc&lt;/a&gt;，在Mac OS中，直接使用&lt;code&gt;brew&lt;/code&gt;命令进行安装即可，安装命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install gcc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;等待安装完成&lt;/p&gt;

&lt;p&gt;输入命令&lt;code&gt;gcc -v&lt;/code&gt;验证是否安装成功，如果安装成功，应该有以下提示：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Configured with: --prefix=/Library/Developer/CommandLineTools/usr --with-gxx-include-dir=/usr/include/c++/4.2.1
Apple LLVM version 6.1.0 (clang-602.0.49) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;4. 配置sublime text的C语言编译系统&lt;/h3&gt;

&lt;p&gt;经过前面的步骤，就可以分别进行C语言的编辑和编译，但是为了方便，只需要简单地配置就可以直接用sublime text进行编译了&lt;/p&gt;

&lt;p&gt;打开Tools-&gt;Build System-&gt;New Build System，在新建的文件中输入以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &quot;cmd&quot; : [&quot;gcc -o ${file_base_name} $file_name&quot;],
    &quot;shell&quot; : true,
    &quot;working_dir&quot; : &quot;$file_path&quot;,
    &quot;selector&quot;: &quot;source.c&quot;,
    &quot;encoding&quot;:&quot;utf-8&quot;,
    &quot;variants&quot; :
    [{
        &quot;name&quot; : &quot;Run&quot;,
        &quot;cmd&quot; : &quot;./${file_base_name}&quot;
    }]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用control+B进行编译文件，使用control+shift+B运行编译好的文件&lt;/p&gt;

&lt;p&gt;以下是sublime text 2的内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &quot;cmd&quot; : [&quot;gcc&quot;,  &quot;-o&quot;, &quot;$file_base_name&quot;, &quot;$file_name&quot;],
    &quot;cmd&quot; : [&quot;./$file_base_name&quot;],
    &quot;selector&quot; : &quot;source.c&quot;,
    &quot;shell&quot; : true,
    &quot;working_dir&quot; : &quot;$file_path&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;第一行相当于在shell中输入命令&lt;code&gt;gcc -o 文件名 文件名.c&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二行则是运行编译成功的文件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第三行的意思是对后缀为&lt;code&gt;.c&lt;/code&gt;的文件进行选择&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;编辑完成后，保存文件，命名为C.sublime-build，然后就可以在Build System中选中这个编译方式了&lt;/p&gt;

&lt;p&gt;编辑文件hello.c:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

int main(){
    printf(&quot;hello world\n&quot;);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用命令&lt;code&gt;command + B&lt;/code&gt;编译并运行，效果如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/image/hello_world_c.png&quot; alt=&quot;hello world&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，就可以在你的Mac OS中使用sublime text进行C语言的开发了&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mac OS Yosemite 安装jekyll</title>
   <link href="http://wenzhiquan.github.io/2015/03/19/mac_os_yosemite_install_jekyll"/>
   <updated>2015-03-19T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2015/03/19/mac_os_yosemite_install_jekyll</id>
   <content type="html">&lt;h1&gt;Mac OS Yosemite 安装jekyll&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3&gt;1. 概述&lt;/h3&gt;

&lt;p&gt;jekyll 是一款简单的博客系统，静态网站生成器。她有一个模版目录，存放整个静态网站的模版文件，可以通过&lt;a href=&quot;https://github.com/shopify/liquid/wiki&quot; title=&quot;Liquid&quot;&gt;Liquid&lt;/a&gt;处理模版文件，把使用标记语言&lt;a href=&quot;http://en.wikipedia.org/wiki/Textile&quot; title=&quot;Textile&quot;&gt;Textile&lt;/a&gt;或&lt;a href=&quot;http://en.wikipedia.org/wiki/Markdown&quot; title=&quot;Markdown&quot;&gt;Markdown&lt;/a&gt;编写的内容文件，按照模版格式，转换成最终的静态网站页面。大名鼎鼎的GitHub Pages就是通过它实现的。搭建好我们的博客系统之后，我们还可以把它放到github的pages上进行展示。&lt;/p&gt;

&lt;h3&gt;2. 安装Homebrew&lt;/h3&gt;

&lt;p&gt;使用Mac的程序员必不可少的一步便是安装Homebrew，他就像是centOS的&lt;code&gt;yum&lt;/code&gt;命令和ubuntu的&lt;code&gt;apt-get&lt;/code&gt;命令一样，通过&lt;code&gt;brew&lt;/code&gt;命令，我们可以快速的安装一些软件包。
使用命令行安装Homebrew的命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;!--break--&gt;


&lt;h3&gt;3. 安装最新版ruby&lt;/h3&gt;

&lt;p&gt;Homebrew安装完成之后，使用它来安装最新版本的ruby，代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成之后，会提示安装好的ruby目录为&lt;code&gt;/usr/local/Cellar/ruby/2.2.0&lt;/code&gt;,我用的shell为zsh，所以想要最新安装的ruby生效，需要将&lt;code&gt;~/.zshrc&lt;/code&gt;配置文件中的环境变量&lt;code&gt;PATH&lt;/code&gt;中添加上新版本ruby的目录，在&lt;code&gt;PATH&lt;/code&gt;后添加上ruby安装目录的&lt;code&gt;bin&lt;/code&gt;文件夹，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PATH=&quot;/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/Cellar/ruby/2.2.0/bin&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后输入命令&lt;code&gt;source ~/.zshrc&lt;/code&gt;，再使用ruby就是最新版本了。&lt;/p&gt;

&lt;p&gt;输入命令&lt;code&gt;ruby --version&lt;/code&gt;查看ruby版本：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby 2.2.0p0 (2014-12-25 revision 49005) [x86_64-darwin14]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果，版本不对，就使用命令&lt;code&gt;echo $PATH&lt;/code&gt;查看最新版本的ruby目录是否在环境变量&lt;code&gt;PATH&lt;/code&gt;中，如果不对，就按照上述过程修改环境变量&lt;code&gt;PATH&lt;/code&gt;。&lt;/p&gt;

&lt;h3&gt;4. 安装jkeyll&lt;/h3&gt;

&lt;p&gt;安装最新版本的jekyll，命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为我们将会使用Markdown语言作为标记语言，所以还需要安装rdiscount，命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install rdiscount
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，本机的jekyll运行环境就已经搭建好了&lt;/p&gt;

&lt;h3&gt;5. 运行例子&lt;/h3&gt;

&lt;p&gt;安装好之后，就可以自己构建一个博客系统，或者也可以到&lt;a href=&quot;http://jekyllthemes.org/&quot; title=&quot;jekyll 模板网站&quot;&gt;jekyll模板网站&lt;/a&gt; 下载自己喜欢的模板进行修改，然后运行并查看效果，要运行jekyll首先要进入博客的根目录，然后运行命令&lt;code&gt;jekyll server&lt;/code&gt;，最后会显示启动信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Server address: http://127.0.0.1:4000/
Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明程序已经成功启动，在浏览器中输入localhost:4000，就可以查看自己的博客了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>fedora20 配置Nginx，Mysql，PHP</title>
   <link href="http://wenzhiquan.github.io/2014/12/09/nginx_mysql_php_in_fedora"/>
   <updated>2014-12-09T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2014/12/09/nginx_mysql_php_in_fedora</id>
   <content type="html">&lt;h1&gt;fedora22 配置Nginx,Mysql,PHP&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3&gt;1. 安装nginx&lt;/h3&gt;

&lt;p&gt;nginx在fedora当中是一个默认包，所以直接使用命令行进行安装即可：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf install nginx -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后启动nginx服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service nginx start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然，也可以设置他为开机启动：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl enable nginx.service
&lt;/code&gt;&lt;/pre&gt;

&lt;!--break--&gt;


&lt;p&gt;然后在你的浏览器当中输入localhost，如果看到以下界面即为安装成功：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/nginx_sccess.png&quot; title=&quot;nginx success&quot; alt=&quot;nginx success&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;2. 安装MySQL&lt;/h3&gt;

&lt;p&gt;mysql在fedora当中叫做MariaDB，但是也可以用安装mysql的命令直接进行安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf install mysql mysql-server -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后启动mysql服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service mariadb start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然，也可以设置他为开机启动：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl enable mariadb.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后输入命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo netstat -tap | grep mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果出现以下代码，说明启动成功：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tcp        0      0 0.0.0.0:mysql           0.0.0.0:*               LISTEN
 5464/mysqld
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动成功后，我们需要给root用户设置一个密码，以防止任何人都可以访问我们的数据库：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysqladmin -u root password &quot;root&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;3. 安装PHP&lt;/h3&gt;

&lt;p&gt;我们可以让PHP5在nginx中以FastCGI的模式工作。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf install php lighttpd-fastcgi php-devel php-fpm php-mysql -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后启动php-fpm服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service php-fpm start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然，也可以设置他为开机启动：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl enable php-fpm.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动之后，还需要配置nginx使之支持php&lt;/p&gt;

&lt;h3&gt;4. 配置nginx支持php&lt;/h3&gt;

&lt;p&gt;首先备份原先的conf文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后复制一份配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp /etc/nginx/nginx.conf.default /etc/nginx/nginx.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建两个目录用于分别存放可用和生效的配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /etc/nginx/sites-avaliable
mkdir -p /etc/nginx/sites-enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这两个目录是模仿Ubuntu的nginx目录进行创建的，其中sites-analiable文件夹用于存放所有可用的server配置，sites-enabled文件夹用于存放生效的server配置&lt;/p&gt;

&lt;p&gt;修改nginx配置文件，添加fastcgi支持&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; vim /etc/nginx/nginx.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将文件修改为以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;
                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;
                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;文件将从conf.d和sites-enabled文件夹中读取所有的server配置，首先需要在sites-avaliable文件夹中建立可用的server配置，然后软链接到sites-enabled文件夹中，这样就可以修改可用配置时，生效配置也会修改，但是删除生效配置时不会对可用配置造成影响：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /etc/nginx/sites-avaliable/default
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将其修改为以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#
# The default server
#
server {
    listen       80;
    server_name  localhost; # or other domain name you like.
    #include /data/www/.htaccess;
    charset utf-8;

    #access_log  logs/host.access.log  main;

    root /usr/share/nginx/html;//这里是web项目文件夹的根目录

    include /etc/nginx/default.d/*.conf;//这个配置文件是安装php和php-fpm时自动生成的，是对nginx针对php的配置

   location / {
        #try_files $uri $uri/ /index.php?$args;
    }

    error_page  404              /404.html;
    location = /404.html {
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在sites-enabled文件夹中建立可用配置的软链接即可
&lt;code&gt;
ln -s /etc/nginx/sites-avaliable/default /etc/nginx/sites-enabled/
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;具体的其他nginx相关配置可以详见&lt;a href=&quot;http://nginx.org/en/docs/&quot;&gt;nginx官方网站&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;另外，如果php报与时区相关的错误，则需要修改/etc/php.ini文件，在其中&lt;code&gt;[Date]&lt;/code&gt;标签下加入一行&lt;code&gt;date.timezone = &#39;Asia/Shanghai&#39;&lt;/code&gt;即可&lt;/p&gt;

&lt;h3&gt;5. 测试&lt;/h3&gt;

&lt;p&gt;每次配置nginx文件后，都需要将其进行重启：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;每次配置php.ini文件后，也需要将其进行重启：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service php-fpm restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后建立index.php文件进行测试：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /usr/share/nginx/html/info.php

&amp;lt;?php
   phpinfo();
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在浏览器中输入servername进行测试：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;输入：localhost/info.php
显示phpinfo界面说明解析成功
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>fedora20 安装搜狗输入法</title>
   <link href="http://wenzhiquan.github.io/2014/11/26/install_sougou_pinyin_in_fedora_20"/>
   <updated>2014-11-26T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2014/11/26/install_sougou_pinyin_in_fedora_20</id>
   <content type="html">&lt;h1&gt;fedora20 安装搜狗输入法&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3&gt;0.环境描述&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;系统环境: Fedora 20  64位
搜狗输入法版本: sogou_pinyin_linux_1.1.0.0037_amd64
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;1.卸载ibus&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo yum remove ibus
gsettings set org.gnome.settings-daemon.plugins.keyboard active false    #解除gnome桌面与ibus守护进程的绑定(必须有这一步)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;2.安装fcitx输入法&lt;/h3&gt;

&lt;p&gt; linux 搜狗输入法使用fcitx作为输入平台,因此要先安装fcitx输入法:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install fcitx fcitx-configtool
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查安装结果:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fcitx -v
显示:fcitx version: 4.2.8.4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明fcitx的当前版本为4.2.8.4,安装成功&lt;/p&gt;

&lt;!--break--&gt;


&lt;p&gt;下一步需要配置Fcitx的环境:在~/.bashrc中加入一下内容:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=&quot;@im=fcitx&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存后重启电脑&lt;/p&gt;

&lt;h3&gt;3.安装搜狗拼音输入法&lt;/h3&gt;

&lt;p&gt;到&lt;a href=&quot;http://pinyin.sogou.com/linux/&quot; title=&quot;搜狗输入法官网&quot;&gt;官网&lt;/a&gt;下载最新版本的搜狗拼音输入法,我下载的是&lt;code&gt;sogou_pinyin_linux_1.1.0.0037_amd64.deb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;下载完成后,切换到deb包所在的目录,执行以下命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ar vx sogou_pinyin_linux_1.1.0.0037_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时会获取包中的文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x - debian-binary
x - control.tar.gz
x - data.tar.xz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后执行以下命令,将包中的内容配置到系统安装目录当中:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo tar -Jxvf data.tar.xz  -C /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;,在fcitx中导入搜狗库,使fcitx识别并统一管理搜狗拼音,执行以下命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cp /usr/lib/x86_64-linux-gnu/fcitx/fcitx-sogoupinyin.so  /usr/lib64/fcitx/fcitx-sogoupinyin.so
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;4.启动搜狗拼音输入法&lt;/h3&gt;

&lt;p&gt;打开终端,启动fcitx和搜狗拼音输入法:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fcitx
sogou-qimpanel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了避免每次启动都要自己手动输入此命令,可以将搜狗拼音输入法加入开机启动项之中&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>leetcode medium single number</title>
   <link href="http://wenzhiquan.github.io/2014/11/25/leetcode_medium_single_number"/>
   <updated>2014-11-25T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2014/11/25/leetcode_medium_single_number</id>
   <content type="html">&lt;h1&gt;leetcode medium single number&lt;/h1&gt;

&lt;hr /&gt;

&lt;h4&gt;题目：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Given an array of integers, every element appears twice except for one. Find that single one.

有一个整数数组，其中的元素只有一个出现了一次，其他的均出现了两次，请找出只出现了一次的元素。
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;注意：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

你的算法的时间复杂度应该是线性的。你能够不使用额外内存实现这个算法吗？
&lt;/code&gt;&lt;/pre&gt;

&lt;!--break--&gt;


&lt;h4&gt;Tags：&lt;code&gt;Hash Table&lt;/code&gt; &lt;code&gt;Bit Manipulation&lt;/code&gt;&lt;/h4&gt;

&lt;h4&gt;代码：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Java：

public class Solution {
    public int singleNumber(int[] A) {
        int result = 0;

        for(int i=0;i&amp;lt;A.length;i++)
            result ^= A[i];
        return result;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;讲解：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;本题利用了bit操作XOR，写法为&#39;^&#39;，特性为a^a=0，即所有出现两次的元素进行异或操作后均变为0，则剩下的元素即为所求。
这个算法可以扩展到除了一个元素，其他元素均出现偶数次的情况使用。
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>如何解决“保护多库版本”问题</title>
   <link href="http://wenzhiquan.github.io/2014/11/25/how_to_deal_with_multiple_version_lib"/>
   <updated>2014-11-25T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2014/11/25/how_to_deal_with_multiple_version_lib</id>
   <content type="html">&lt;h1&gt;如何解决“保护多库版本”问题&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;今天在fedora21上安装wine的时候，遇到一个问题，错误提示为：保护多库版本 ...&lt;/p&gt;

&lt;p&gt;搜查了一圈，找到了一个解决方案&lt;/p&gt;

&lt;p&gt;首先将fedora进行降级：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum distro-sync
&lt;/code&gt;&lt;/pre&gt;

&lt;!--break--&gt;


&lt;p&gt;然后进行源的清理：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum clean all &amp;amp;&amp;amp; sudo yum makecache
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后，重新升级fedora：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再进行安装就可以了&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Markdown 简明语法</title>
   <link href="http://wenzhiquan.github.io/2014/10/14/markdown_simple_syntax"/>
   <updated>2014-10-14T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2014/10/14/markdown_simple_syntax</id>
   <content type="html">&lt;h1&gt;Markdown 简明语法&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3&gt;1.简介&lt;/h3&gt;

&lt;p&gt;Markdown的目标是实现「易读易写」，成为一种适用于网络的「书写语言」。&lt;/p&gt;

&lt;p&gt;一份使用Markdown格式撰写的文件可以直接以纯文本发布，它的最大灵感来源其实是纯文本电子邮件的格式。&lt;/p&gt;

&lt;p&gt;Markdown的语法由一些符号所组成，其作用一目了然。比如：在文字两旁加上星号，看起来就像&lt;strong&gt;强调&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;Markdown兼容HTML语法并且会将&lt;code&gt;&amp;lt;&lt;/code&gt;和&lt;code&gt;&amp;amp;&lt;/code&gt;等符号进行自动转换，这项特性可以让我们很容易地用Markdown写HTML code。&lt;/p&gt;

&lt;!--break--&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h3&gt;2.区块元素&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;2.1.段落和换行&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;空白行表示单一段落，相当于&lt;code&gt;&amp;lt;p/&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;连续两个空格表示换行，相当于&lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;连续三个&lt;code&gt;*&lt;/code&gt;或&lt;code&gt;+&lt;/code&gt;或&lt;code&gt;-&lt;/code&gt;,然后空白行，表示hr横线&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;2.2.标题&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;标题是在首行插入1到6个&lt;code&gt;#&lt;/code&gt;,对应的是标题1至标题6，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 这是 H1

## 这是 H2

...

###### 这是 H6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;h1&gt;这是 H1&lt;/h1&gt;

&lt;h2&gt;这是 H2&lt;/h2&gt;

&lt;h6&gt;这是 H6&lt;/h6&gt;

&lt;p&gt;同时，也可以选择性地「闭合」标题，在行尾加上&lt;code&gt;#&lt;/code&gt;，这么做只是为了美观：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 这是 H1 #

## 这是 H2 ##

### 这是 H3 ###
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2.3.区块引用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Markdown标记区块引用是使用类似 email 中用&lt;code&gt;&amp;gt;&lt;/code&gt;加&lt;code&gt;space&lt;/code&gt;的引用方式:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;

&lt;p&gt;Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;区块引用可以嵌套，只要根据层次加上不同数量的&lt;code&gt;&amp;gt;&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; This is the first level of quoting.
&amp;gt;
&amp;gt; &amp;gt; This is nested blockquote.
&amp;gt;
&amp;gt; Back to the first level.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is the first level of quoting.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is nested blockquote.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Back to the first level.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;引用的区块内也可以使用其他的Markdown语法，包括标题、列表、代码区块等：&lt;/p&gt;

&lt;blockquote&gt;&lt;h3&gt;这是一个标题。&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;这是第一行列表项。&lt;/li&gt;
&lt;li&gt;这是第二行列表项。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;给出一些例子代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return &quot;Hello world!&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;2.4.列表&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Markdown 支持有序列表和无序列表。&lt;/p&gt;

&lt;p&gt;无序列表使用&lt;code&gt;*&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt;或是&lt;code&gt;-&lt;/code&gt;作为列表标记：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 三种符号效果相同
*   Red
*   Green
*   Blue
+   Red
+   Green
+   Blue
-   Red
-   Green
-   Blue
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果均为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;Blue&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;有序列表则使用数字接着一个英文句点&lt;code&gt;.&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.  Bird
2.  McHale
3.  Parish
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;McHale&lt;/li&gt;
&lt;li&gt;Parish&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;strong&gt;2.5.代码区块&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;要在Markdown中建立代码区块很简单，只要简单地缩进4个&lt;code&gt;space&lt;/code&gt;或是1个&lt;code&gt;tab&lt;/code&gt;就可以，例如，下面的输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;这是一个普通段落：

    这是一个代码区块。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;这是一个普通段落：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;这是一个代码区块。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;代码区块中，一般的Markdown语法不会被转换，像是&lt;code&gt;*&lt;/code&gt;便只是&lt;code&gt;*&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;此外，还可以使用一对
&lt;code&gt;```&lt;/code&gt;（数字键1左边的反引号）将段落包围起来使其成为代码区块。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.6.分割线&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;你可以在一行中用三个以上的&lt;code&gt;*&lt;/code&gt;、&lt;code&gt;-&lt;/code&gt;、&lt;code&gt;_&lt;/code&gt;来建立一个分隔线，行内不能有其他东西。你也可以在&lt;code&gt;*&lt;/code&gt;或是&lt;code&gt;-&lt;/code&gt;中间插入&lt;code&gt;space&lt;/code&gt;。下面每种写法都可以建立分隔线：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* * *

***

*****

- - -

---------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h3&gt;3.区段元素&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;3.1.链接&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Markdown支持两种形式的链接语法： 行内式和参考式两种形式。&lt;/p&gt;

&lt;p&gt;不管是哪一种，链接文字都是用&lt;code&gt;[]&lt;/code&gt;来标记。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;3.1.1.行内式链接&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;要建立一个行内式的链接，只要在&lt;code&gt;[]&lt;/code&gt;后面紧接着&lt;code&gt;()&lt;/code&gt;并插入网址链接即可，如果你还想要加上链接的&lt;code&gt;title&lt;/code&gt;文字，只要在网址后面，用&lt;code&gt;&quot;&quot;&lt;/code&gt;把&lt;code&gt;title&lt;/code&gt;文字包起来即可，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;这是[百度](http://www.baidu.com&quot;百度首页&quot;)的行内式链接.

这个[百度](http://www.baidu.com)不包含`title`参数.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;这是&lt;a href=&quot;http://www.baidu.com&quot; title=&quot;百度首页&quot;&gt;百度&lt;/a&gt;的行内式链接.&lt;/p&gt;

&lt;p&gt;这个&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;不包含&lt;code&gt;title&lt;/code&gt;参数.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;3.1.2.参考式链接&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;参考式的链接是在链接文字的&lt;code&gt;[]&lt;/code&gt;后面再接上另一个&lt;code&gt;[]&lt;/code&gt;，而在第二个&lt;code&gt;[]&lt;/code&gt;里面要填入用以辨识链接的标记，接着，在文件的任意处，你可以把这个标记的链接内容定义出来：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
这是[百度][id]参考式链接.

[id]: http://www.baidu.com  &quot;百度首页&quot; 
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;这是&lt;a href=&quot;/blog/image/test.jpg&quot; title=&quot;你有多爱我？这么多！&quot;&gt;百度&lt;/a&gt;参考式链接.&lt;/p&gt;

&lt;p&gt;链接内容定义的形式为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[]&lt;/code&gt;（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字&lt;/li&gt;
&lt;li&gt;紧跟着一个&lt;code&gt;:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接着是一个以上的&lt;code&gt;space&lt;/code&gt;或&lt;code&gt;tab&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后是链接的网址&lt;/li&gt;
&lt;li&gt;最后可以选择性地输入&lt;code&gt;title&lt;/code&gt;内容，可以用&lt;code&gt;&#39;&#39;&lt;/code&gt;、&lt;code&gt;&quot;&quot;&lt;/code&gt;或是&lt;code&gt;()&lt;/code&gt;包着&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;3.2.强调&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Markdown使用星号&lt;code&gt;*&lt;/code&gt;和下划线&lt;code&gt;_&lt;/code&gt;作为标记强调字词的符号，被&lt;code&gt;*&lt;/code&gt;或&lt;code&gt;_&lt;/code&gt;包围的字词会被转成用&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;标签包围，用两个&lt;code&gt;*&lt;/code&gt;或&lt;code&gt;_&lt;/code&gt;包起来的话，则会被转成&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;*单个星号*

_单个下划线_

**双星号**

__双下划线__
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;&lt;em&gt;单个星号&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;单个下划线&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;双星号&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;双下划线&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;强调样式的限制是，样式符号必须成对出现，如果你的&lt;code&gt;*&lt;/code&gt;和&lt;code&gt;_&lt;/code&gt;两边都有空白的话，它们就只会被当成普通的符号。&lt;/p&gt;

&lt;p&gt;强调也可以直接插在文字中间：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;这是一个*强调*。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;这是一个&lt;em&gt;强调&lt;/em&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.3.代码&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果要标记一小段行内代码，你可以用&lt;code&gt;`&lt;/code&gt;把它包起来，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Use the `printf()` function.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.4.图片&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Markdown使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;3.4.1.行内式图片&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;行内式的图片语法看起来像是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;![测试图片](/image/test.jpg)

![测试图片](/image/test.jpg &quot;你有多爱我？这么多！&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;详细叙述如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一个&lt;code&gt;!&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接着一个&lt;code&gt;[]&lt;/code&gt;，里面放上图片的替代文字&lt;/li&gt;
&lt;li&gt;接着一个&lt;code&gt;()&lt;/code&gt;，里面放上图片的网址，最后还可以用&lt;code&gt;&quot;&quot;&lt;/code&gt;包住,并加上选择性的&lt;code&gt;title&lt;/code&gt;文字。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/image/test.jpg&quot; alt=&quot;测试图片&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/image/test.jpg&quot; title=&quot;你有多爱我？这么多！&quot; alt=&quot;测试图片&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;3.4.2.参考式图片&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;参考式的图片语法则如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
![Alt text][id]

[id]: /blog/image/test.jpg &quot;你有多爱我？这么多！&quot;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/image/test.jpg&quot; title=&quot;你有多爱我？这么多！&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;到目前为止，Markdown还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;标签。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h3&gt;4.其他&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;4.1.自动链接&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Markdown支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;包起来，Markdown就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;http://www.baidu.com&amp;gt;

&amp;lt;baidu@163.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.baidu.com&quot;&gt;http://www.baidu.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#x6c;&amp;#x74;&amp;#111;&amp;#58;&amp;#98;&amp;#97;&amp;#105;&amp;#100;&amp;#x75;&amp;#64;&amp;#x31;&amp;#x36;&amp;#x33;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#109;&quot;&gt;&amp;#x62;&amp;#97;&amp;#x69;&amp;#x64;&amp;#117;&amp;#x40;&amp;#49;&amp;#x36;&amp;#51;&amp;#x2e;&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.2.反斜杠&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Markdown可以利用反斜杠来插入一些在语法中有其它意义的符号:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\\   反斜线
\`   反引号
\*   星号
\_   底线
\{}  花括号
\[]  方括号
\()  括弧
\#   井字号
\+   加号
\-   减号
\.   英文句点
\!   惊叹号
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果为：&lt;/p&gt;

&lt;p&gt;\   反斜线
`   反引号
*   星号
_   底线
{}  花括号
[]  方括号
()  括弧
#   井字号
+   加号
-   减号
.   英文句点
!   惊叹号&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 20 安装gitolite</title>
   <link href="http://wenzhiquan.github.io/2014/10/14/fedora_20_install_gitolite"/>
   <updated>2014-10-14T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2014/10/14/fedora_20_install_gitolite</id>
   <content type="html">&lt;h1&gt;Fedora 20 安装gitolite&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3&gt;1.gitolite安装先决条件&lt;/h3&gt;

&lt;p&gt;关于&lt;code&gt;git&lt;/code&gt;和&lt;code&gt;ssh&lt;/code&gt;登录的基础知识，网上已经有很多很好的文章，在这里就不再加以赘述了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.1.安装git&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;要安装&lt;code&gt;gitolite&lt;/code&gt;，首先要安装&lt;code&gt;git&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;1.2.创建git用户组和git用户&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;然后，需要新建用户和用户组&lt;code&gt;git&lt;/code&gt;，以方便所有用户使用&lt;code&gt;git&lt;/code&gt;账户进行登录：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 添加git用户组
sudo groupadd git

# 创建新用户git并将其添加到用户组git之中
sudo adduser -g git git

# 修改用户git的密码
sudo passwd git
&lt;/code&gt;&lt;/pre&gt;

&lt;!--break--&gt;


&lt;p&gt;&lt;strong&gt;1.3.创建管理员密钥&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;由于初始化&lt;code&gt;gitolite&lt;/code&gt;需要一个管理员的公钥，所以需要创建一个&lt;code&gt;key&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 为名为“yourname”的账户生成相应的key
ssh-keygen -t rsa -C &quot;yourname&quot;

# 选择存储key的位置及key文件名称
Enter file in which to save the key (/home/user/.ssh/id_rsa): /home/user/.ssh/yourname
Enter passphrase (empty for no passphrase): #为你的key创建密码，一般不需要，回车即可
Enter same passphrase again: #回车即可

# 最后输出类似的结果表示key生成成功
...
The key&#39;s randomart image is:
+--[ RSA 2048]----+
|    . .          |
|     = .         |
|  . o E          |
| o o = o         |
|  o o = S        |
|   . + B.        |
|    . =o.        |
|     .o.         |
|     .oo.        |
+-----------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;1.4.将公钥上传到git用户中&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;生成&lt;code&gt;key&lt;/code&gt;之后，需要将其上传到&lt;code&gt;git&lt;/code&gt;用户之中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 将公钥上传到git用户中
scp /home/user/.ssh/yourname.pub git@localhost:/tmp

ECDSA key fingerprint is 77:ad:e9:c2:e3:9f:bc:eb:38:42:e8:24:4f:b4:4a:a9.
Are you sure you want to continue connecting (yes/no)? yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若此时出现错误：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh: connect to host 127.0.0.1 port 22: Connection refused
lost connection
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;则说明&lt;code&gt;ssh&lt;/code&gt;服务没有打开，需要开启&lt;code&gt;ssh&lt;/code&gt;服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 开启ssh服务
sudo service sshd start

# 开机启动ssh服务
sudo systemctl enable sshd.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;除此之外，要让局域网内的用户能够访问&lt;code&gt;git&lt;/code&gt;服务器，需要关闭防火墙：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl stop firewalld.service
sudo systemctl disable firewalld.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h3&gt;2.安装gitolite&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;2.1.进入git用户并创建bin目录&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;安装&lt;code&gt;gitolite&lt;/code&gt;的操作需要在&lt;code&gt;git&lt;/code&gt;用户下进行，首先需要切换到&lt;code&gt;git&lt;/code&gt;用户：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入密码后，需要切换到&lt;code&gt;git&lt;/code&gt;用户的用户根目录下创建&lt;code&gt;bin&lt;/code&gt;文件夹：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~

# 创建bin文件夹是为了将gitolite安装到其中便于认知和管理
mkdir bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2.2.克隆gitolite并安装&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我们需要从&lt;code&gt;github&lt;/code&gt;中克隆&lt;code&gt;gitolite&lt;/code&gt;的官方仓库进行安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 克隆gitolite仓库
git clone git://github.com/sitaramc/gitolite

#将gitolite安装到bin目录下
./gitolite/install -to ~/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装&lt;code&gt;gitolite&lt;/code&gt;的时候，可能会出现错误：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Can&#39;t locate Data/Dumper.pm in @INC
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是由于没有安装相应的&lt;code&gt;perl&lt;/code&gt;包所导致的，需要切换回非&lt;code&gt;git&lt;/code&gt;用户进行安装，使用命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 使用CPAN安装perl包
sudo perl -MCPAN -e shell

cpan[1]&amp;gt; install Data::Dumper
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是首次使用&lt;code&gt;CPAN&lt;/code&gt;会进行一定的配置，在询问是否自动配置处输入&lt;code&gt;yes&lt;/code&gt;即可。&lt;/p&gt;

&lt;p&gt;使用&lt;code&gt;CPAN&lt;/code&gt;时可能出现错误：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Can&#39;t locate CPAN.pm in @INC
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是由于没有安装&lt;code&gt;CPAN&lt;/code&gt;出现的错误，使用命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install perl-CPAN
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，应该会自动集成&lt;code&gt;Data::Dumper&lt;/code&gt;包。&lt;/p&gt;

&lt;p&gt;回到&lt;code&gt;git&lt;/code&gt;用户，安装&lt;code&gt;gitolite&lt;/code&gt;后，&lt;code&gt;bin&lt;/code&gt;文件夹中会出现相应的文件，到此，&lt;code&gt;gitolite&lt;/code&gt;就安装成功了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.3.使用公钥初始化gitolite&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;完成安装&lt;code&gt;gitolite&lt;/code&gt;后，需要使用刚才上传的公钥将&lt;code&gt;gitolite&lt;/code&gt;进行初始化，这个公钥的所有者将成为&lt;code&gt;gitolite&lt;/code&gt;的第一个管理员, 在&lt;code&gt;git&lt;/code&gt;用户根目录下，使用命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 使用yourname.pub对gitolite进行初始化
./bin/gitolite setup -pk yourname.pub

初始化空的 Git 版本库于 /home/git/repositories/gitolite-admin.git/
初始化空的 Git 版本库于 /home/git/repositories/testing.git/
WARNING: /home/git/.ssh missing; creating a new one
    (this is normal on a brand new install)
WARNING: /home/git/.ssh/authorized_keys missing; creating a new one
    (this is normal on a brand new install)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;到此为止，&lt;code&gt;gitolite&lt;/code&gt;的初始化已经完成。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h3&gt;3.添加gitolite的用户和仓库&lt;/h3&gt;

&lt;p&gt;不要手动在&lt;code&gt;git&lt;/code&gt;服务器中添加新用户或者新仓库。因为&lt;code&gt;gitolite&lt;/code&gt;的用户，仓库和权限规则都是使用一个名为&lt;code&gt;gitolite-admin&lt;/code&gt;的特殊仓库进行维护的，想要进行修改，就需要通过修改该仓库的文件并&lt;code&gt;push&lt;/code&gt;到服务器当中。&lt;/p&gt;

&lt;p&gt;要添加用户和仓库，首先需要退出&lt;code&gt;git&lt;/code&gt;用户后，将&lt;code&gt;gitolite-admin&lt;/code&gt;克隆到本地:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 退出git用户
exit

# 将gitolite-admin仓库克隆到本地
git clone git@localhost:gitolite-admin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入&lt;code&gt;gtiolite&lt;/code&gt;目录后，可以看到两个子目录&lt;code&gt;conf&lt;/code&gt;和&lt;code&gt;keydir&lt;/code&gt;，&lt;code&gt;conf/gitolite.conf&lt;/code&gt;用于修改仓库，用户及其权限，&lt;code&gt;keydir&lt;/code&gt;用于存放用户的公钥。&lt;/p&gt;

&lt;p&gt;为了增加新用户&lt;code&gt;alice&lt;/code&gt;，&lt;code&gt;bob&lt;/code&gt;和&lt;code&gt;carol&lt;/code&gt;， 首先需要获取他们的公钥（alice.pub，bob.pub和carol.pub），并添加到&lt;code&gt;keydir&lt;/code&gt;文件夹当中。&lt;/p&gt;

&lt;p&gt;为了增加新仓库&lt;code&gt;foo&lt;/code&gt;，并赋予这些用户不同的权限，修改&lt;code&gt;conf/gitolite.conf&lt;/code&gt;文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;repo foo
    RW+         =   alice
    RW          =   bob
    R           =   carol
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进行修改之后，需要将改动上传到服务器使其生效：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add conf
git add keydir
git commit -m &quot;added foo, gave access to alice, bob, carol&quot;
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当&lt;code&gt;git&lt;/code&gt;的&lt;code&gt;push&lt;/code&gt;操作成功后，&lt;code&gt;gitolite&lt;/code&gt;将会把新用户添加到服务器的&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;文件中，然后会新建一个名为&lt;code&gt;foo&lt;/code&gt;的空仓库。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h3&gt;4.进阶操作&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;4.1.权限管理&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gitolite&lt;/code&gt;的权限管理非常强大，之前展示的只是最简单的权限管理，下面是更加深入一些的管理：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;repo foo
    RW+                     =   alice
    -   master              =   bob
    -   refs/tags/v[0-9]    =   bob
    RW                      =   bob
    RW  refs/tags/v[0-9]    =   carol
    R                       =   dave
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面对上述规则进行阐述：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;alice&lt;/code&gt;能够对仓库进行所有的操作。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;bob&lt;/code&gt;能够创建和推送任何名字不为&lt;code&gt;master&lt;/code&gt;的分支，并能够添加任何不以&lt;code&gt;v+数字&lt;/code&gt;开头的&lt;code&gt;tag&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;carol&lt;/code&gt;能够添加任何以&lt;code&gt;v+数字&lt;/code&gt;开头的&lt;code&gt;tag&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;dave&lt;/code&gt;能够进行&lt;code&gt;clone&lt;/code&gt;和&lt;code&gt;fetch&lt;/code&gt;操作。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;更加详细的权限管理请看&lt;a href=&quot;http://gitolite.com/gitolite/gitolite.html&quot; title=&quot;gitolite官方文档&quot;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.2.组&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gitolite&lt;/code&gt;允许创建用户组：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@staff      =   alice bob carol
@interns    =   ashok

repo secret
    RW      =   @staff

repo foss
    RW+     =   @staff
    RW      =   @interns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用户组是可以堆叠的，下面的写法和上方的&lt;code&gt;@staff&lt;/code&gt;是相同的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@staff      =   alice bob
@staff      =   carol
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样的，也可以将用户组添加到另一个用户组当中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@all-devs   =   @staff @interns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此外，&lt;code&gt;gitolite&lt;/code&gt;有一个特殊的用户组，名为&lt;code&gt;@all&lt;/code&gt;，他表示所有的用户。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 20 安装qq2013</title>
   <link href="http://wenzhiquan.github.io/2014/10/11/fedora_20_install_qq_2013"/>
   <updated>2014-10-11T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2014/10/11/fedora_20_install_qq_2013</id>
   <content type="html">&lt;h1&gt;Fedora 20 安装qq2013&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;在当今中国，qq已经成为必不可少的交流工具了，但是官网linux版本的QQ功能和windows的相比真的是大相庭径，于是龙井开发出了wineqq共广大linux用户使用，ubuntu等debian系统直接安装deb包就可以了，但是fedora安装比较麻烦。所以在这里把自己安装的心得和步骤和大家分享一下。&lt;/p&gt;

&lt;p&gt;首先需要的就是安装&lt;code&gt;wine&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install wine
&lt;/code&gt;&lt;/pre&gt;

&lt;!--break--&gt;


&lt;p&gt;然后是下载最新版本的&lt;code&gt;wine qq2013&lt;/code&gt;：
&lt;code&gt;
http://www.longene.org/download/
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我下载的是最新版的&lt;code&gt;qq2013SP6&lt;/code&gt;，文件名为&lt;code&gt;WineQQ2013SP6-20140102-Longene.deb&lt;/code&gt;，将他直接解压，会有一个名为&lt;code&gt;data.tar.gz&lt;/code&gt;的压缩包，在&lt;code&gt;data.tar.gz&lt;/code&gt;所在文件夹使用命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar -zxvf data.tar.gz -C /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在&lt;code&gt;/opt&lt;/code&gt;目录中会生成一个名为&lt;code&gt;longene&lt;/code&gt;的文件夹，然后运行&lt;code&gt;qq&lt;/code&gt;文件夹中的&lt;code&gt;qq.sh&lt;/code&gt;，&lt;code&gt;qq&lt;/code&gt;就可以启动了，如果遇见缺少某些组件的问题的话，直接安装就可以，我安装时是缺少&lt;code&gt;libgdk-x11-2.0.so.0&lt;/code&gt;这个包，直接使用命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install libgdk-x11-2.0.so.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后&lt;code&gt;qq&lt;/code&gt;即可正常启动。&lt;/p&gt;

&lt;p style=&quot;color:red&quot;&gt;注意wine qq的密码只可以用软键盘输入。&lt;/p&gt;


&lt;p&gt;启动效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/qq2013.jpg&quot; alt=&quot;qq2013&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 20 安装后的一些操作</title>
   <link href="http://wenzhiquan.github.io/2014/10/10/fedora_20_installed_to_do"/>
   <updated>2014-10-10T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2014/10/10/fedora_20_installed_to_do</id>
   <content type="html">&lt;h1&gt;Fedora 20 安装后的一些操作&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3&gt;1. 安装fedora20后的初始化配置&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.1. 防火墙&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果你的电脑处于局域网内，默认开启的防火墙会导致局域网内的其他电脑无法与你的电脑进行连接，所以，停止它！&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl stop firewalld.service
sudo systemctl disable firewalld.service
&lt;/code&gt;&lt;/pre&gt;

&lt;!--break--&gt;


&lt;p&gt;&lt;strong&gt;1.2. SELinux&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;停止&lt;a href=&quot;http://baike.baidu.com/view/487687.htm?fr=aladdin&quot; title=&quot;百度百科&quot;&gt;SELinux&lt;/a&gt;，如果你不需要它。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo vi /etc/sysconfig/selinux
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#enforcing - SELinux security policy is enforced.
#permissive - SELinux prints warnings instead of enforcing.
#disabled - SELinux is fully disabled.
SELINUX= disabled   # change
# SELINUXTYPE= type of policy in use. Possible values are:
#targeted - Only targeted network daemons are protected.
#strict - Full SELinux protection.
SELINUXTYPE=targeted
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2. 安装rpmfusion源&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fedora20的源：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum localinstall --nogpgcheck http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-20.noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-20.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;3. 安装一下有用的一些软件包&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum -y install yum-fastestmirror vim gnome-tweak-tool cmake gcc p7zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;4. 升级一下系统：&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum -y update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;5. 安装 flash plugin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;32位系统：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm
sudo rpm -ivh adobe-release-i386-1.0-1.noarch.rpm
sudo yum -y install flash-plugin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;64位系统：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm
sudo rpm -ivh adobe-release-x86_64-1.0-1.noarch.rpm
sudo yum -y install flash-plugin
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 20 中文字体美化</title>
   <link href="http://wenzhiquan.github.io/2014/10/10/fedora_20_chinese_fonts"/>
   <updated>2014-10-10T00:00:00+08:00</updated>
   <id>http://wenzhiquan.github.io/2014/10/10/fedora_20_chinese_fonts</id>
   <content type="html">&lt;h1&gt;Fedora 20 中文字体美化&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;新装了Fedora 20，但是他的中文字体看起来略微有一些奇怪，通过上网查找和自己的实践，总结出了以下美化的步骤：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.安装文泉驿微米黑并开启文泉驿微米黑渲染：&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install wqy-microhei-fonts
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;vi /etc/fonts/conf.d/65-0-wqy-microhei.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将false改成true,然后保存。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
&amp;lt;!DOCTYPE fontconfig SYSTEM &quot;fonts.dtd&quot;&amp;gt;
&amp;lt;fontconfig&amp;gt;
    &amp;lt;match target=&quot;font&quot;&amp;gt;
        &amp;lt;test name=&quot;family&quot;&amp;gt;
            &amp;lt;string&amp;gt;WenQuanYi Micro Hei&amp;lt;/string&amp;gt;
        &amp;lt;/test&amp;gt;
        &amp;lt;edit name=&quot;hinting&quot; mode=&quot;assign&quot;&amp;gt;
            &amp;lt;bool&amp;gt;false&amp;lt;/bool&amp;gt;
        &amp;lt;/edit&amp;gt;
    &amp;lt;/match&amp;gt;
&amp;lt;/fontconfig&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;!--break--&gt;


&lt;p&gt;&lt;strong&gt;2.安装infinality字体渲染软件：&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rpm -Uvh http://www.infinality.net/fedora/linux/infinality-repo-1.0-1.noarch.rpm
sudo yum install freetype-infinality fontconfig-infinality
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;3.配置渲染：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(1)建立自定义渲染方案：&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /etc/fonts/infinality/styles.conf.avail
sudo mkdir fedora
sudo cp linux/* fedora
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;(2)在/etc/fonts/infinality/styles.conf.avail/fedora目录中：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;编辑&lt;code&gt;20-aliases-default-linux.conf&lt;/code&gt;文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gedit 20-aliases-default-linux.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在每一对&lt;code&gt;&amp;lt;prefer&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;/prefer&amp;gt;&lt;/code&gt;标签之间添加以下文本：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;family&amp;gt;WenQuanYi Micro Hei&amp;lt;/family&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;alias&amp;gt;
    &amp;lt;family&amp;gt;sans-serif&amp;lt;/family&amp;gt;
    &amp;lt;prefer&amp;gt;
        &amp;lt;family&amp;gt;DejaVu Sans&amp;lt;/family&amp;gt;
    &amp;lt;/prefer&amp;gt;
&amp;lt;/alias&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就变成了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;alias&amp;gt;
    &amp;lt;family&amp;gt;sans-serif&amp;lt;/family&amp;gt;
        &amp;lt;prefer&amp;gt;
            &amp;lt;family&amp;gt;DejaVu Sans&amp;lt;/family&amp;gt;
            &amp;lt;family&amp;gt;WenQuanYi Micro Hei&amp;lt;/family&amp;gt;
    &amp;lt;/prefer&amp;gt;
&amp;lt;/alias&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;总共添加三处，然后保存退出。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(3) 创建中文渲染配置文件&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;创建&lt;code&gt;62-group-chinese-fonts.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gedit 62-group-chinese-fonts.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加以下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&#39;1.0&#39;?&amp;gt;
&amp;lt;!DOCTYPE fontconfig SYSTEM &#39;fonts.dtd&#39;&amp;gt;
&amp;lt;fontconfig&amp;gt;
   &amp;lt;match target=&quot;font&quot;&amp;gt;
      &amp;lt;test name=&quot;force_autohint&quot;&amp;gt;
         &amp;lt;bool&amp;gt;false&amp;lt;/bool&amp;gt;
      &amp;lt;/test&amp;gt;
      &amp;lt;test name=&quot;family&quot;&amp;gt;
         &amp;lt;string&amp;gt;WenQuanYi Micro Hei&amp;lt;/string&amp;gt;
        &amp;lt;/test&amp;gt;
      &amp;lt;edit name=&quot;font_type&quot; mode=&quot;assign&quot;&amp;gt;
         &amp;lt;string&amp;gt;Chinese Font&amp;lt;/string&amp;gt;
      &amp;lt;/edit&amp;gt;
   &amp;lt;/match&amp;gt;

   &amp;lt;match target=&quot;font&quot;&amp;gt;
      &amp;lt;test name=&quot;force_autohint&quot;&amp;gt;
         &amp;lt;bool&amp;gt;false&amp;lt;/bool&amp;gt;
      &amp;lt;/test&amp;gt;
      &amp;lt;test name=&quot;family&quot;&amp;gt;
         &amp;lt;string&amp;gt;WenQuanYi Micro Hei Light&amp;lt;/string&amp;gt;
        &amp;lt;/test&amp;gt;
      &amp;lt;edit name=&quot;font_type&quot; mode=&quot;assign&quot;&amp;gt;
         &amp;lt;string&amp;gt;Chinese Font&amp;lt;/string&amp;gt;
      &amp;lt;/edit&amp;gt;
   &amp;lt;/match&amp;gt;

   &amp;lt;match target=&quot;font&quot;&amp;gt;
      &amp;lt;test name=&quot;force_autohint&quot;&amp;gt;
         &amp;lt;bool&amp;gt;false&amp;lt;/bool&amp;gt;
      &amp;lt;/test&amp;gt;
      &amp;lt;test name=&quot;family&quot;&amp;gt;
         &amp;lt;string&amp;gt;WenQuanYi Micro Hei Mono&amp;lt;/string&amp;gt;
        &amp;lt;/test&amp;gt;
      &amp;lt;edit name=&quot;font_type&quot; mode=&quot;assign&quot;&amp;gt;
         &amp;lt;string&amp;gt;Chinese Font&amp;lt;/string&amp;gt;
      &amp;lt;/edit&amp;gt;
   &amp;lt;/match&amp;gt;

   &amp;lt;match target=&quot;font&quot;&amp;gt;
      &amp;lt;test name=&quot;force_autohint&quot;&amp;gt;
         &amp;lt;bool&amp;gt;false&amp;lt;/bool&amp;gt;
      &amp;lt;/test&amp;gt;
      &amp;lt;test name=&quot;family&quot;&amp;gt;
         &amp;lt;string&amp;gt;WenQuanYi Micro Hei Mono Light&amp;lt;/string&amp;gt;
        &amp;lt;/test&amp;gt;
      &amp;lt;edit name=&quot;font_type&quot; mode=&quot;assign&quot;&amp;gt;
         &amp;lt;string&amp;gt;Chinese Font&amp;lt;/string&amp;gt;
      &amp;lt;/edit&amp;gt;
   &amp;lt;/match&amp;gt;

   &amp;lt;match target=&quot;font&quot;&amp;gt;
      &amp;lt;test name=&quot;force_autohint&quot;&amp;gt;
         &amp;lt;bool&amp;gt;false&amp;lt;/bool&amp;gt;
      &amp;lt;/test&amp;gt;
      &amp;lt;test name=&quot;family&quot;&amp;gt;
         &amp;lt;string&amp;gt;WenQuanYi Zen Hei&amp;lt;/string&amp;gt;
        &amp;lt;/test&amp;gt;
      &amp;lt;edit name=&quot;font_type&quot; mode=&quot;assign&quot;&amp;gt;
         &amp;lt;string&amp;gt;Chinese Font&amp;lt;/string&amp;gt;
      &amp;lt;/edit&amp;gt;
   &amp;lt;/match&amp;gt;

   &amp;lt;match target=&quot;font&quot;&amp;gt;
      &amp;lt;test name=&quot;force_autohint&quot;&amp;gt;
         &amp;lt;bool&amp;gt;false&amp;lt;/bool&amp;gt;
      &amp;lt;/test&amp;gt;
      &amp;lt;test name=&quot;family&quot;&amp;gt;
         &amp;lt;string&amp;gt;WenQuanYi Zei Hei Mono&amp;lt;/string&amp;gt;
        &amp;lt;/test&amp;gt;
      &amp;lt;edit name=&quot;font_type&quot; mode=&quot;assign&quot;&amp;gt;
         &amp;lt;string&amp;gt;Chinese Font&amp;lt;/string&amp;gt;
      &amp;lt;/edit&amp;gt;
   &amp;lt;/match&amp;gt;
&amp;lt;/fontconfig&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后保存退出。&lt;/p&gt;

&lt;p&gt;创建&lt;code&gt;63-group-chinese-fonts-rendering.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gedit 63-group-chinese-fonts-rendering.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加以下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&#39;1.0&#39;?&amp;gt;
&amp;lt;!DOCTYPE fontconfig SYSTEM &#39;fonts.dtd&#39;&amp;gt;
&amp;lt;fontconfig&amp;gt;
   &amp;lt;match target=&quot;font&quot;&amp;gt;
      &amp;lt;test name=&quot;font_type&quot;&amp;gt;
         &amp;lt;string&amp;gt;Chinese Font&amp;lt;/string&amp;gt;
      &amp;lt;/test&amp;gt;
      &amp;lt;edit name=&quot;antialias&quot; mode=&quot;assign&quot;&amp;gt;
         &amp;lt;bool&amp;gt;true&amp;lt;/bool&amp;gt;
      &amp;lt;/edit&amp;gt;
      &amp;lt;edit name=&quot;hintstyle&quot; mode=&quot;assign&quot;&amp;gt;
         &amp;lt;const&amp;gt;hintslight&amp;lt;/const&amp;gt;
      &amp;lt;/edit&amp;gt;
      &amp;lt;edit name=&quot;autohint&quot; mode=&quot;assign&quot;&amp;gt;
         &amp;lt;bool&amp;gt;false&amp;lt;/bool&amp;gt;
      &amp;lt;/edit&amp;gt;
   &amp;lt;/match&amp;gt;
&amp;lt;/fontconfig&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后保存退出。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.选择配置方案：&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/fonts/infinality/infctl.sh setstyle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入我们创建的渲染方案fedora的序号 2，回车。&lt;/p&gt;

&lt;p&gt;重启计算机之后就可以看到比较令人满意的显示效果了。&lt;/p&gt;
</content>
 </entry>
 
 
</feed>